{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory Name"
		},
		"S3": {
			"type": "string"
		},
		"ADLS": {
			"type": "string"
		},
		"SQLDW": {
			"type": "string"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Movie Analytics')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Use this template to get an understanding of how to leverage the capabilities of Copy and Mapping Data Flow in Azure Data Factory\n\nThis pipeline copies a delimited text movies database from S3 to ADLS gen 2 and then Executes a Mapping Data Flow to calculate aggregate metrics by year and genre, and then write to a SQL DW",
				"activities": [
					{
						"name": "AggregateAndWriteToDW",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "MoveFromS3ToADLS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "AggregateMoviesDataFlow",
								"type": "DataFlowReference"
							},
							"staging": {
								"linkedService": {
									"referenceName": "Blob",
									"type": "LinkedServiceReference"
								},
								"folderPath": "sample-data/ready-demo/staging"
							}
						}
					},
					{
						"name": "MoveFromS3ToADLS",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AmazonS3ReadSetting",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSetting"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSetting"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSetting",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "MoviesS3",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "MoviesADLS",
								"type": "DatasetReference"
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/AggregateMoviesDataFlow')]",
				"[concat(variables('factoryId'), '/datasets/MoviesS3')]",
				"[concat(variables('factoryId'), '/datasets/MoviesADLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AggregateMoviesDataFlow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "This Data Flow does the following:\n1. Take in a Movies csv file with 6 columns stored in ADLS\n2. Renaming one column and dropping another\n3. Filtering out movies released before 1900\n4. Deriving the primary genre as a new column from the existing genres column\n5. Windowing over year and primary genre to rank movies based on their Rotten Tomatoes rating\n6. Aggregating Movies based on year and primary genre to figure out average rating and the highest/lowest rated movies\n7. Specifying an Upsert condition\n8. Writing to a SQL DW sink",
				"folder": {
					"name": "Movie Analytics"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "MoviesADLS",
								"type": "DatasetReference"
							},
							"name": "MoviesADLS"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SinkDW",
								"type": "DatasetReference"
							},
							"name": "SinkToDW"
						}
					],
					"script": "\n\nsource(output(\n\t\tmovie as string,\n\t\ttitle as string,\n\t\tgenres as string,\n\t\tyear as string,\n\t\tRating as string,\n\t\t{Rotton Tomato} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> MoviesADLS\nAggregateRatings alterRow(upsertIf(true())) ~> UpsertIfTrue\nFilterYearsBefore1950 derive(PrimaryGenre = iif(locate('|', genres) > 1, left(genres, locate('|', genres) - 1), genres)) ~> DerivePrimaryGenre\nDerivePrimaryGenre window(over(PrimaryGenre,\n\t\tyear),\n\tdesc({Rotten Tomato}, true),\n\tRatingsRank = rank()) ~> RankMoviesByRatings\nRankMoviesByRatings aggregate(groupBy(PrimaryGenre,\n\t\tyear),\n\tAverageRating = avg(toInteger({Rotten Tomato})),\n\t\tHighestRated = first(title),\n\t\tLowestRated = last(title),\n\t\tNumberOfMovies = count()) ~> AggregateRatings\nMoviesADLS select(mapColumn(\n\t\tmovie,\n\t\ttitle,\n\t\tgenres,\n\t\tyear,\n\t\t{Rotten Tomato} = {Rotton Tomato}\n\t)) ~> SelectAndRename\nSelectAndRename filter(toInteger(year) > 1950) ~> FilterYearsBefore1950\nUpsertIfTrue sink(input(\n\t\tPrimaryGenre as string,\n\t\tyear as string,\n\t\tAverageRating as double,\n\t\tHighestRated as string,\n\t\tLowestRated as string,\n\t\tNumberOfMovies as long\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false,\n\tformat: 'table',\n\tstaged: true,\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:false,\n\tupsertable:true,\n\tkeys:['PrimaryGenre','year'],\n\tpartitionBy('hash', 1)) ~> SinkToDW"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/MoviesADLS')]",
				"[concat(variables('factoryId'), '/datasets/SinkDW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MoviesS3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('S3')]",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Movie Analytics"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AmazonS3Location",
						"bucketName": "daperlov-test",
						"fileName": "moviesDB.csv"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "movie",
						"type": "String"
					},
					{
						"name": "title",
						"type": "String"
					},
					{
						"name": "genres",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "Rating",
						"type": "String"
					},
					{
						"name": "Rotton Tomato",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MoviesADLS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('ADLS')]",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Movie Analytics"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "ready-demo",
						"fileSystem": "sample-data"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "movie",
						"type": "String"
					},
					{
						"name": "title",
						"type": "String"
					},
					{
						"name": "genres",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "Rating",
						"type": "String"
					},
					{
						"name": "Rotton Tomato",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SinkDW')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('SQLDW')]",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Movie Analytics"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "PrimaryGenre",
						"type": "nvarchar"
					},
					{
						"name": "year",
						"type": "nvarchar"
					},
					{
						"name": "AverageRating",
						"type": "float",
						"precision": 15
					},
					{
						"name": "HighestRated",
						"type": "nvarchar"
					},
					{
						"name": "LowestRated",
						"type": "nvarchar"
					},
					{
						"name": "NumberOfMovies",
						"type": "bigint",
						"precision": 19
					}
				],
				"typeProperties": {
					"tableName": "ADF_Lab_Sink"
				}
			},
			"dependsOn": []
		}
	]
}