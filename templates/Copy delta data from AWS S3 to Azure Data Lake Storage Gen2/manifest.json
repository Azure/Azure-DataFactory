{
	"name": "Copy delta data from AWS S3 to Azure Data Lake Storage Gen2",
	"description": "Use this template to copy delta data from petabytes of data from Amazon S3 to Azure Data Lake Storage Gen2.\n\nIf you want to copy delta data from small data volume from AWS S3 to Azure (for example, less than 10 TB), it's more efficient to use \"Copy Data tool\". The template that's described in this article is more than you need.",
	"image": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 400 240\" width=\"400px\" height=\"240px\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><g clip-path=\"url(#mainClip38280)\" transform=\"matrix(1, 0, 0, 1, 0, 0)\"><g transform=\"matrix(0.780911, 0, 0, 0.780911, 23.9046, 87.2017)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><g transform=\"matrix(1, 0, 0, 1, 0.8, 0.8)\"><rect fill=\"#f4f4f4\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\" x=\"0\" y=\"0\" width=\"192.4\" height=\"82.4\"/><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><rect fill=\"#dcdcdc\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\" x=\"0\" y=\"0\" width=\"192.4\" height=\"25\"/><g clip-path=\"url(#CLIP38281)\" transform=\"matrix(1, 0, 0, 1, 0, 0)\"><text style=\"font: 12px Segoe UI\" fill=\"#515151\" stroke=\"none\" text-anchor=\"start\" transform=\"matrix(1, 0, 0, 1, 5, 6.5)\" x=\"0\" y=\"10.5105\">Lookup</text></g><g transform=\"matrix(1, 0, 0, 1, 173, 4.5)\"><path fill=\"#ffffff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\" d=\"M 8 14 C 4.6865 14 2 11.3135 2 8 C 2 4.6865 4.6865 2 8 2 C 11.3135 2 14 4.6865 14 8 C 14 11.3135 11.3135 14 8 14 L 8 14 Z\"/><path fill=\"#417505\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\" d=\"M 12.7113 5.35036 L 11.6514 4.29037 L 6.50141 9.44032 L 4.35144 7.29034 L 3.29145 8.35033 L 6.50141 11.5603 L 12.7113 5.35036 Z M 13.2913 14.0003 C 10.8644 16.1405 7.38716 16.608 4.48116 15.1847 C 1.57516 13.7614 -0.187239 10.7276 0.0158543 7.49814 C 0.218947 4.26868 2.34753 1.47959 5.40895 0.431554 C 8.47037 -0.616484 11.8617 0.282942 14.0013 2.71039 C 16.9223 6.02425 16.6045 11.0784 13.2913 14.0003 L 13.2913 14.0003 Z\"/></g></g><g transform=\"matrix(1, 0, 0, 1, 0, 25)\"><g transform=\"matrix(1, 0, 0, 1, 10, 13.5)\"><path fill=\"#212121\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\" d=\"M 4.5 9 L 4.5 9 L 3 9 L 3 3 L 9 3 L 9 4.5 L 4.5 4.5 L 4.5 9 M 4.5 25.5 L 4.5 25.5 L 9 25.5 L 9 27 L 3 27 L 3 21 L 4.5 21 L 4.5 25.5 M 27 3 L 27 3 L 27 9 L 25.5 9 L 25.5 4.5 L 21 4.5 L 21 3 L 27 3 M 25.5 21 L 25.5 21 L 27 21 L 27 27 L 21 27 L 21 25.5 L 25.5 25.5 L 25.5 21 M 16.5 15.4335 C 16.626 15.5595 17.511 16.4355 17.8185 16.728 C 18.1275 17.0205 18.4785 17.3595 18.873 17.742 C 19.269 18.1245 19.6785 18.5295 20.103 18.9555 C 20.529 19.3815 20.9205 19.782 21.2745 20.157 C 21.63 20.532 21.924 20.865 22.1535 21.153 C 22.386 21.441 22.5 21.6405 22.5 21.75 C 22.5 21.954 22.4265 22.1295 22.278 22.278 C 22.1295 22.4265 21.954 22.5 21.75 22.5 C 21.642 22.5 21.4425 22.3845 21.153 22.155 C 20.865 21.9255 20.532 21.6315 20.157 21.276 C 19.782 20.9205 19.3815 20.5305 18.9555 20.1045 C 18.531 19.6785 18.126 19.269 17.742 18.8745 C 17.3595 18.48 17.022 18.129 16.728 17.82 C 16.4355 17.5095 15.5595 16.6245 15.4335 16.5 L 16.5 15.4335 Z M 12.75 9 C 14.817 9 16.5 10.683 16.5 12.75 C 16.5 14.817 14.817 16.5 12.75 16.5 C 10.683 16.5 9 14.817 9 12.75 C 9 10.683 10.683 9 12.75 9 Z M 12.75 7.5 C 9.8505 7.5 7.5 9.8505 7.5 12.75 C 7.5 15.6495 9.8505 18 12.75 18 C 15.6495 18 18 15.6495 18 12.75 C 18 9.8505 15.6495 7.5 12.75 7.5 Z\"/></g><g transform=\"matrix(1, 0, 0, 1, 50, 21.3295)\"><text style=\"font: 14px Segoe UI\" fill=\"black\" stroke=\"none\" text-anchor=\"start\" transform=\"matrix(1, 0, 0, 1, 0, 0)\" x=\"0\" y=\"12.2558\">LookupPartitionList</text></g></g></g><path fill=\"transparent\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\" d=\"M 2 0 L 191 0 C 191.895 0 193 1.10457 193 2 L 193 81 C 193 81.8954 191.895 83 191 83 L 2 83 C 1.10457 83 0 81.8954 0 81 L 0 2 C 0 1.10457 1.10457 0 2 0 Z\"/><path fill=\"none\" stroke=\"#c8c8c8\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" stroke-width=\"1\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\" d=\"M 2 0 L 191 0 C 191.895 0 193 1.10457 193 2 L 193 81 C 193 81.8954 191.895 83 191 83 L 2 83 C 1.10457 83 0 81.8954 0 81 L 0 2 C 0 1.10457 1.10457 0 2 0 Z\"/></g></g></g><g transform=\"matrix(1, 0, 0, 1, 194, 1)\"><g transform=\"matrix(1, 0, 0, 1, 0, 34)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><path fill=\"#488e50\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 1)\" d=\"M 0 0 L 9 0 L 9 12 L 0 12 Z\"/></g></g></g></g><g transform=\"matrix(1, 0, 0, 1, 248, 0)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><g transform=\"matrix(1, 0, 0, 1, 0.8, 0.8)\"><rect fill=\"#f4f4f4\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\" x=\"0\" y=\"0\" width=\"192.4\" height=\"82.4\"/><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><rect fill=\"#dcdcdc\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\" x=\"0\" y=\"0\" width=\"192.4\" height=\"25\"/><g clip-path=\"url(#CLIP38282)\" transform=\"matrix(1, 0, 0, 1, 0, 0)\"><text style=\"font: 12px Segoe UI\" fill=\"#515151\" stroke=\"none\" text-anchor=\"start\" transform=\"matrix(1, 0, 0, 1, 5, 6.5)\" x=\"0\" y=\"10.5105\">ForEach</text></g><g transform=\"matrix(1, 0, 0, 1, 173, 4.5)\"><path fill=\"#ffffff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\" d=\"M 8 14 C 4.6865 14 2 11.3135 2 8 C 2 4.6865 4.6865 2 8 2 C 11.3135 2 14 4.6865 14 8 C 14 11.3135 11.3135 14 8 14 L 8 14 Z\"/><path fill=\"#417505\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\" d=\"M 12.7113 5.35036 L 11.6514 4.29037 L 6.50141 9.44032 L 4.35144 7.29034 L 3.29145 8.35033 L 6.50141 11.5603 L 12.7113 5.35036 Z M 13.2913 14.0003 C 10.8644 16.1405 7.38716 16.608 4.48116 15.1847 C 1.57516 13.7614 -0.187239 10.7276 0.0158543 7.49814 C 0.218947 4.26868 2.34753 1.47959 5.40895 0.431554 C 8.47037 -0.616484 11.8617 0.282942 14.0013 2.71039 C 16.9223 6.02425 16.6045 11.0784 13.2913 14.0003 L 13.2913 14.0003 Z\"/></g></g><g transform=\"matrix(1, 0, 0, 1, 0, 25)\"><g transform=\"matrix(1, 0, 0, 1, 10, 13.5)\"><path fill=\"#424242\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\" d=\"M 16.944 7.065 L 15.8835 6.0045 L 12.0435 9.8445 L 15.789 13.59 L 16.8495 12.5295 L 14.8215 10.5015 L 22.542 10.5015 L 22.542 10.5 L 24 10.5 L 24 21 L 12 21 L 12 6 L 4.5 6 L 4.5 25.5 L 12 25.5 L 12 22.5 L 25.5 22.5 L 25.5 9 L 15.0105 9 L 16.944 7.065 Z M 10.5 24 L 6 24 L 6 19.5 L 10.5 19.5 L 10.5 24 Z M 10.5 18 L 6 18 L 6 13.5 L 10.5 13.5 L 10.5 18 Z M 10.5 12 L 6 12 L 6 7.5 L 10.5 7.5 L 10.5 12 Z\"/></g><g transform=\"matrix(1, 0, 0, 1, 50, 21.3295)\"><text style=\"font: 14px Segoe UI\" fill=\"black\" stroke=\"none\" text-anchor=\"start\" transform=\"matrix(1, 0, 0, 1, 0, 0)\" x=\"0\" y=\"12.2558\">ForEachFolderList</text></g></g></g><path fill=\"transparent\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\" d=\"M 2 0 L 191 0 C 191.895 0 193 1.10457 193 2 L 193 81 C 193 81.8954 191.895 83 191 83 L 2 83 C 1.10457 83 0 81.8954 0 81 L 0 2 C 0 1.10457 1.10457 0 2 0 Z\"/><path fill=\"none\" stroke=\"#c8c8c8\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" stroke-width=\"1\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\" d=\"M 2 0 L 191 0 C 191.895 0 193 1.10457 193 2 L 193 81 C 193 81.8954 191.895 83 191 83 L 2 83 C 1.10457 83 0 81.8954 0 81 L 0 2 C 0 1.10457 1.10457 0 2 0 Z\"/></g></g></g><g transform=\"matrix(1, 0, 0, 1, 194, 1)\"><g transform=\"matrix(1, 0, 0, 1, 0, 34)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><path fill=\"#488e50\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 1)\" d=\"M 0 0 L 9 0 L 9 12 L 0 12 Z\"/></g></g></g></g><g transform=\"matrix(1, 0, 0, 1, 202.5, 36.88)\"><path fill=\"none\" stroke=\"#488e50\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" stroke-width=\"1\" transform=\"matrix(1, 0, 0, 1, 0.5, 5.12)\" d=\"M 0 0 L 45 0\"/><path fill=\"#488e50\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 37, 0.5)\" d=\"M 0 0 L 8 4.62 L 0 9.24 Z\"/><path fill=\"none\" stroke=\"#488e50\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" stroke-width=\"1\" transform=\"matrix(1, 0, 0, 1, 37, 0.5)\" d=\"M 0 0 L 8 4.62 L 0 9.24 Z\"/></g></g></g><clipPath id=\"mainClip38280\"><rect x=\"0\" y=\"0\" width=\"400\" height=\"240\"/></clipPath><clipPath id=\"CLIP38281\"><path transform=\"matrix(1, 0, 0, 1, 0, 0)\" d=\"M 5 6.5 L 192.4 6.5 L 192.4 25 L 5 25 Z\"/></clipPath><clipPath id=\"CLIP38282\"><path transform=\"matrix(1, 0, 0, 1, 0, 0)\" d=\"M 5 6.5 L 192.4 6.5 L 192.4 25 L 5 25 Z\"/></clipPath></svg>",
	"icons": [
		"AmazonS3Object",
		"Copy",
		"AzureBlob"
	],
	"requires": {
		"linkedservices": {
			"Azure_SQL_Database_Connection": {
				"supportTypes": [
					"AzureSqlDatabase"
				]
			},
			"AWS_S3_Connection": {
				"supportTypes": [
					"AmazonS3"
				]
			},
			"Azure_Storage_Connection": {
				"supportTypes": [
					"AzureBlobFS",
					"AzureBlobStorage"
				]
			}
		}
	},
	"annotations": [
		"Amazon S3",
		"Copy",
		"Data Lake Storage",
		"Data Lake Storage Gen2",
		"S3"
	],
	"services": [
		"Amazon S3",
		"Azure Data Lake Storage"
	],
    "documentation": "https://docs.microsoft.com/azure/data-factory/solution-template-migration-s3-azure",
	"categories": [
		"Copy"
	]
}