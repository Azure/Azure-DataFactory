{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name"
		},
		"BlobStorage": {
			"type": "string"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/FindLatestFileInAFolder')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetAllFiles",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "FolderPathToFindTheLatestFile",
								"type": "DatasetReference",
								"parameters": {
									"ContainerName": {
										"value": "@pipeline().parameters.ContainerName",
										"type": "Expression"
									},
									"FolderPath": {
										"value": "@pipeline().parameters.FolderPath",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "IterateFolder",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "FilteroutJSON",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('FilteroutJSON').output.Value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "CheckGreaterEpoch",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@greater(first(split(item().name, '-')),variables('greatestEpochVal'))",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "SetGreaterEpoch",
												"type": "SetVariable",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"variableName": "greatestEpochVal",
													"value": {
														"value": "@first(split(item().name, '-'))",
														"type": "Expression"
													}
												}
											},
											{
												"name": "SetFileName",
												"type": "SetVariable",
												"dependsOn": [
													{
														"activity": "SetGreaterEpoch",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"userProperties": [],
												"typeProperties": {
													"variableName": "latestFileName",
													"value": {
														"value": "@item().name",
														"type": "Expression"
													}
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "WriteLatestValueToJSON",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "IterateFolder",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"additionalColumns": [
									{
										"name": "latestFileName",
										"value": {
											"value": "@variables('latestFileName')",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DummyJsonUsedToCreateResultFile",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "LatestFileResult",
								"type": "DatasetReference",
								"parameters": {
									"ContainerName": {
										"value": "@pipeline().parameters.ContainerName",
										"type": "Expression"
									},
									"FolderPath": {
										"value": "@pipeline().parameters.FolderPath",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "FilteroutJSON",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetAllFiles",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetAllFiles').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@and(equals(item().type,'File'),not(endswith(item().name,'.json')))",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"ContainerName": {
						"type": "string",
						"defaultValue": "test-sample"
					},
					"FolderPath": {
						"type": "string",
						"defaultValue": "latest-file-folder"
					}
				},
				"variables": {
					"latestFileName": {
						"type": "String"
					},
					"greatestEpochVal": {
						"type": "String",
						"defaultValue": "0"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/FolderPathToFindTheLatestFile')]",
				"[concat(variables('factoryId'), '/datasets/DummyJsonUsedToCreateResultFile')]",
				"[concat(variables('factoryId'), '/datasets/LatestFileResult')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FolderPathToFindTheLatestFile')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('BlobStorage')]",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"ContainerName": {
						"type": "string"
					},
					"FolderPath": {
						"type": "string"
					}
				},
				"folder": {
					"name": "FindLatestFileInAFolder"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": {
							"value": "@dataset().FolderPath",
							"type": "Expression"
						},
						"container": {
							"value": "@dataset().ContainerName",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DummyJsonUsedToCreateResultFile')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('BlobStorage')]",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "FindLatestFileInAFolder"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "dummy-file.json",
						"folderPath": "latest-file",
						"container": "code-samples"
					}
				},
				"schema": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LatestFileResult')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('BlobStorage')]",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"ContainerName": {
						"type": "string"
					},
					"FolderPath": {
						"type": "string"
					}
				},
				"folder": {
					"name": "FindLatestFileInAFolder"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "latest-file.json",
						"folderPath": {
							"value": "@dataset().FolderPath",
							"type": "Expression"
						},
						"container": {
							"value": "@dataset().ContainerName",
							"type": "Expression"
						}
					}
				},
				"schema": {}
			},
			"dependsOn": []
		}
	]
}