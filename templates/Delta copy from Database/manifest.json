{  
    "name":"Delta copy from Database",
    "description":"Use this template to copy new or updated rows only from database using high-watermark stored in an external control table. \n\nThis template requires that the database schema MUST contain either a timestamp column or an incrementing key column to identify new or updated data. ADF can then use a query to filter changes from database and copy them to the destination store.\n\nIf you do have timestamp column in your source database to identify the new or updated rows, but do not want to create any external control table to achive delta copy, you can go to \"copy data tool\" to get a pipeline, which use trigger scheduled time as a variable to read the new rows only from source database.",
    "image":"<svg width=\"400px\" height=\"240px\" viewBox=\"0 0 400 240\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\" clip-path=\"url(#mainClip47367)\"><g transform=\"matrix(0.5077574047954866, 0, 0, 0.5077574047954866, 22.538787023977434, 66.93935119887166)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><g transform=\"matrix(1, 0, 0, 1, 0.8, 0.8)\"><rect x=\"0\" y=\"0\" width=\"192.4\" height=\"82.4\" fill=\"#F4F4F4\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\"/><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><rect x=\"0\" y=\"0\" width=\"192.4\" height=\"25\" fill=\"#DCDCDC\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\"/><g transform=\"matrix(1, 0, 0, 1, 0, 0)\" clip-path=\"url(#CLIP47368)\"><text x=\"0\" y=\"10.506005859375001\" style=\"font: 12px Segoe UI\" text-anchor=\"start\" fill=\"#515151\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 5, 6.5)\">Lookup</text></g></g><g transform=\"matrix(1, 0, 0, 1, 0, 25)\"><g transform=\"matrix(1, 0, 0, 1, 10, 13.5)\"><path d=\"M 4.5,9 L 4.5,9 L 3,9 L 3,3 L 9,3 L 9,4.5 L 4.5,4.5 L 4.5,9 M 4.5,25.5 L 4.5,25.5 L 9,25.5 L 9,27 L 3,27 L 3,21 L 4.5,21 L 4.5,25.5 M 27,3 L 27,3 L 27,9 L 25.5,9 L 25.5,4.5 L 21,4.5 L 21,3 L 27,3 M 25.5,21 L 25.5,21 L 27,21 L 27,27 L 21,27 L 21,25.5 L 25.5,25.5 L 25.5,21 M 16.5,15.433499999999999 C 16.625999999999998,15.5595 17.511,16.4355 17.8185,16.727999999999998 C 18.1275,17.0205 18.4785,17.3595 18.873,17.741999999999997 C 19.269,18.1245 19.6785,18.5295 20.102999999999998,18.9555 C 20.529,19.3815 20.920499999999997,19.782 21.2745,20.157 C 21.63,20.532 21.924,20.865000000000002 22.1535,21.153 C 22.386,21.441000000000003 22.5,21.6405 22.5,21.75 C 22.5,21.954 22.4265,22.1295 22.278,22.278 C 22.1295,22.4265 21.954,22.5 21.75,22.5 C 21.642000000000003,22.5 21.4425,22.3845 21.153,22.155 C 20.865000000000002,21.9255 20.532,21.6315 20.157,21.276 C 19.782,20.920499999999997 19.3815,20.5305 18.9555,20.1045 C 18.531,19.6785 18.125999999999998,19.269 17.741999999999997,18.8745 C 17.3595,18.48 17.022000000000002,18.129 16.727999999999998,17.82 C 16.4355,17.5095 15.5595,16.6245 15.433499999999999,16.5 L 16.5,15.433499999999999 z M 12.75,9 C 14.817,9 16.5,10.683 16.5,12.75 C 16.5,14.817 14.817,16.5 12.75,16.5 C 10.683,16.5 9,14.817 9,12.75 C 9,10.683 10.683,9 12.75,9 z M 12.75,7.5 C 9.8505,7.5 7.5,9.8505 7.5,12.75 C 7.5,15.6495 9.8505,18 12.75,18 C 15.6495,18 18,15.6495 18,12.75 C 18,9.8505 15.6495,7.5 12.75,7.5 z\" fill=\"#212121\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\"/></g><g transform=\"matrix(1, 0, 0, 1, 0, 0)\" clip-path=\"url(#CLIP47369)\"><g transform=\"matrix(1, 0, 0, 1, 50, 21.328662109375)\"><text x=\"0\" y=\"12.257006835937501\" style=\"font: 14px Segoe UI\" text-anchor=\"start\" fill=\"black\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">LookupLastWaterMark</text></g></g></g></g><path d=\"M 2,0 L 191,0 C 191.89543050033842,0 193,1.1045694996615871 193,2 L 193,81 C 193,81.8954305003384 191.89543050033842,83 191,83 L 2,83 C 1.1045694996615871,83 0,81.8954305003384 0,81 L 0,2 C 0,1.1045694996615871 1.1045694996615871,0 2,0 z\" fill=\"transparent\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"/><path d=\"M 2,0 L 191,0 C 191.89543050033842,0 193,1.1045694996615871 193,2 L 193,81 C 193,81.8954305003384 191.89543050033842,83 191,83 L 2,83 C 1.1045694996615871,83 0,81.8954305003384 0,81 L 0,2 C 0,1.1045694996615871 1.1045694996615871,0 2,0 z\" fill=\"none\" stroke=\"#C8C8C8\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"/></g></g></g><g transform=\"matrix(1, 0, 0, 1, 194, 1)\"><g transform=\"matrix(1, 0, 0, 1, 0, 34)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><path d=\"M 0,0 L 9,0 L 9,12 L 0,12 z\" fill=\"#488E50\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 1)\"/></g></g></g></g><g transform=\"matrix(1, 0, 0, 1, 0, 125)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><g transform=\"matrix(1, 0, 0, 1, 0.8, 0.8)\"><rect x=\"0\" y=\"0\" width=\"192.4\" height=\"82.4\" fill=\"#F4F4F4\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\"/><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><rect x=\"0\" y=\"0\" width=\"192.4\" height=\"25\" fill=\"#DCDCDC\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\"/><g transform=\"matrix(1, 0, 0, 1, 0, 0)\" clip-path=\"url(#CLIP47370)\"><text x=\"0\" y=\"10.506005859375001\" style=\"font: 12px Segoe UI\" text-anchor=\"start\" fill=\"#515151\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 5, 6.5)\">Lookup</text></g></g><g transform=\"matrix(1, 0, 0, 1, 0, 25)\"><g transform=\"matrix(1, 0, 0, 1, 10, 13.5)\"><path d=\"M 4.5,9 L 4.5,9 L 3,9 L 3,3 L 9,3 L 9,4.5 L 4.5,4.5 L 4.5,9 M 4.5,25.5 L 4.5,25.5 L 9,25.5 L 9,27 L 3,27 L 3,21 L 4.5,21 L 4.5,25.5 M 27,3 L 27,3 L 27,9 L 25.5,9 L 25.5,4.5 L 21,4.5 L 21,3 L 27,3 M 25.5,21 L 25.5,21 L 27,21 L 27,27 L 21,27 L 21,25.5 L 25.5,25.5 L 25.5,21 M 16.5,15.433499999999999 C 16.625999999999998,15.5595 17.511,16.4355 17.8185,16.727999999999998 C 18.1275,17.0205 18.4785,17.3595 18.873,17.741999999999997 C 19.269,18.1245 19.6785,18.5295 20.102999999999998,18.9555 C 20.529,19.3815 20.920499999999997,19.782 21.2745,20.157 C 21.63,20.532 21.924,20.865000000000002 22.1535,21.153 C 22.386,21.441000000000003 22.5,21.6405 22.5,21.75 C 22.5,21.954 22.4265,22.1295 22.278,22.278 C 22.1295,22.4265 21.954,22.5 21.75,22.5 C 21.642000000000003,22.5 21.4425,22.3845 21.153,22.155 C 20.865000000000002,21.9255 20.532,21.6315 20.157,21.276 C 19.782,20.920499999999997 19.3815,20.5305 18.9555,20.1045 C 18.531,19.6785 18.125999999999998,19.269 17.741999999999997,18.8745 C 17.3595,18.48 17.022000000000002,18.129 16.727999999999998,17.82 C 16.4355,17.5095 15.5595,16.6245 15.433499999999999,16.5 L 16.5,15.433499999999999 z M 12.75,9 C 14.817,9 16.5,10.683 16.5,12.75 C 16.5,14.817 14.817,16.5 12.75,16.5 C 10.683,16.5 9,14.817 9,12.75 C 9,10.683 10.683,9 12.75,9 z M 12.75,7.5 C 9.8505,7.5 7.5,9.8505 7.5,12.75 C 7.5,15.6495 9.8505,18 12.75,18 C 15.6495,18 18,15.6495 18,12.75 C 18,9.8505 15.6495,7.5 12.75,7.5 z\" fill=\"#212121\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\"/></g><g transform=\"matrix(1, 0, 0, 1, 0, 0)\" clip-path=\"url(#CLIP47371)\"><g transform=\"matrix(1, 0, 0, 1, 50, 21.328662109375)\"><text x=\"0\" y=\"12.257006835937501\" style=\"font: 14px Segoe UI\" text-anchor=\"start\" fill=\"black\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">LookupCurrentWater...</text></g></g></g></g><path d=\"M 2,0 L 191,0 C 191.89543050033842,0 193,1.1045694996615871 193,2 L 193,81 C 193,81.8954305003384 191.89543050033842,83 191,83 L 2,83 C 1.1045694996615871,83 0,81.8954305003384 0,81 L 0,2 C 0,1.1045694996615871 1.1045694996615871,0 2,0 z\" fill=\"transparent\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"/><path d=\"M 2,0 L 191,0 C 191.89543050033842,0 193,1.1045694996615871 193,2 L 193,81 C 193,81.8954305003384 191.89543050033842,83 191,83 L 2,83 C 1.1045694996615871,83 0,81.8954305003384 0,81 L 0,2 C 0,1.1045694996615871 1.1045694996615871,0 2,0 z\" fill=\"none\" stroke=\"#C8C8C8\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"/></g></g></g><g transform=\"matrix(1, 0, 0, 1, 194, 1)\"><g transform=\"matrix(1, 0, 0, 1, 0, 34)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><path d=\"M 0,0 L 9,0 L 9,12 L 0,12 z\" fill=\"#488E50\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 1)\"/></g></g></g></g><g transform=\"matrix(1, 0, 0, 1, 248, 50)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><g transform=\"matrix(1, 0, 0, 1, 0.8, 0.8)\"><rect x=\"0\" y=\"0\" width=\"192.4\" height=\"82.4\" fill=\"#F4F4F4\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\"/><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><rect x=\"0\" y=\"0\" width=\"192.4\" height=\"25\" fill=\"#DCDCDC\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\"/><g transform=\"matrix(1, 0, 0, 1, 0, 0)\" clip-path=\"url(#CLIP47372)\"><text x=\"0\" y=\"10.506005859375001\" style=\"font: 12px Segoe UI\" text-anchor=\"start\" fill=\"#515151\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 5, 6.5)\">Copy Data</text></g></g><g transform=\"matrix(1, 0, 0, 1, 0, 25)\"><g transform=\"matrix(1, 0, 0, 1, 10, 13.5)\"><path d=\"M 0,1.4204999999999999 L 0,1.4204999999999999 L 10.51155,1.4204999999999999 L 10.51155,6.426 L 0,6.426 L 0,1.4204999999999999 M 1.49115,1.43085 L 1.49115,1.43085 L 12.003,1.43085 L 12.003,6.436349999999999 L 1.49115,6.436349999999999 L 1.49115,1.43085 M 0,1.4884499999999998 L 0,1.4884499999999998 L 10.510349999999999,1.4884499999999998 L 10.510349999999999,13.48395 L 0,13.48395 L 0,1.4884499999999998 M 1.491,0.0048000000000000004 L 1.491,0.0048000000000000004 L 12.0015,0.0048000000000000004 L 12.0015,12 L 1.491,12 L 1.491,0.0048000000000000004\" fill=\"transparent\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\"/><path d=\"M 9.75555,4.5 C 7.139550000000001,4.5 4.499549999999999,5.274 4.499549999999999,7.003500000000001 C 4.499549999999999,8.7315 7.139550000000001,9.5055 9.75555,9.5055 C 12.37155,9.5055 15.01155,8.7315 15.01155,7.003500000000001 C 15.01155,5.274 12.37155,4.5 9.75555,4.5 M 9.75555,5.553 C 11.95455,5.553 13.736550000000001,6.2025 13.736550000000001,7.003500000000001 C 13.736550000000001,7.803 11.95455,8.4525 9.75555,8.4525 C 7.55655,8.4525 5.77455,7.803 5.77455,7.003500000000001 C 5.77455,6.2025 7.55655,5.553 9.75555,5.553\" fill=\"#231F20\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\"/><path d=\"M 20.24715,12.010349999999999 C 17.63115,12.010349999999999 14.99115,12.78435 14.99115,14.513850000000001 C 14.99115,16.24185 17.63115,17.01585 20.24715,17.01585 C 22.86315,17.01585 25.503149999999998,16.24185 25.503149999999998,14.513850000000001 C 25.503149999999998,12.78435 22.86315,12.010349999999999 20.24715,12.010349999999999 M 20.24715,13.06335 C 22.44615,13.06335 24.22815,13.71285 24.22815,14.513850000000001 C 24.22815,15.31335 22.44615,15.96285 20.24715,15.96285 C 18.04815,15.96285 16.266150000000003,15.31335 16.266150000000003,14.513850000000001 C 16.266150000000003,13.71285 18.04815,13.06335 20.24715,13.06335\" fill=\"#231F20\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\"/><path d=\"M 14.084850000000001,6.06795 L 13.234350000000001,6.06795 C 13.76535,6.328949999999999 14.08185,6.6514500000000005 14.08185,7.0024500000000005 C 14.08185,7.872450000000001 12.14385,8.57895 9.75285,8.57895 C 7.36185,8.57895 5.42385,7.872450000000001 5.42385,7.0024500000000005 C 5.42385,6.6514500000000005 5.74185,6.328949999999999 6.27135,6.06795 L 5.42685,6.06795 C 4.91535,6.06795 4.4998499999999995,6.481949999999999 4.4998499999999995,6.99345 L 4.4998499999999995,15.534450000000001 C 4.4998499999999995,15.538950000000002 4.4998499999999995,15.543450000000002 4.4998499999999995,15.54795 C 4.4998499999999995,15.55245 4.4998499999999995,15.55545 4.4998499999999995,15.55995 C 4.4998499999999995,17.28945 7.13985,18.063450000000003 9.755849999999999,18.063450000000003 C 11.00085,18.063450000000003 12.38835,17.653950000000002 12.907350000000001,17.49045 L 12.907350000000001,12.765450000000001 C 12.868350000000001,11.83845 14.038350000000001,10.78395 15.010349999999999,10.60695 L 15.010349999999999,6.99345 C 15.010349999999999,6.481949999999999 14.596350000000001,6.06795 14.084850000000001,6.06795\" fill=\"#231F20\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\"/><path d=\"M 24.576,13.5843 L 23.7255,13.5843 C 24.2565,13.8453 24.572999999999997,14.167800000000003 24.572999999999997,14.518800000000002 C 24.572999999999997,15.3888 22.634999999999998,16.0953 20.244,16.0953 C 17.853,16.0953 15.915,15.3888 15.915,14.518800000000002 C 15.915,14.167800000000003 16.232999999999997,13.8453 16.762500000000003,13.5843 L 15.918,13.5843 C 15.406500000000001,13.5843 14.991,13.9983 14.991,14.511300000000002 L 14.991,17.1813 L 14.991,23.050800000000002 C 14.991,23.055300000000003 14.991,23.059800000000003 14.991,23.064300000000003 C 14.991,23.068800000000003 14.991,23.0718 14.991,23.0763 C 14.991,24.414300000000004 16.572,25.177799999999998 18.498,25.4568 L 18.498,25.4583 C 18.517500000000002,25.4613 18.5385,25.4613 18.558,25.464299999999998 C 18.813,25.5003 19.072499999999998,25.5273 19.3365,25.546800000000005 C 19.3635,25.548299999999998 19.3905,25.5498 19.415999999999997,25.551300000000005 C 19.692,25.5693 19.969499999999996,25.5798 20.247,25.5798 C 20.5245,25.5798 20.802,25.5693 21.078,25.551300000000005 C 21.103499999999997,25.5498 21.130499999999998,25.548299999999998 21.156,25.546800000000005 C 21.42,25.5273 21.681,25.5003 21.936,25.464299999999998 C 21.9555,25.4613 21.975,25.4613 21.994500000000002,25.4583 L 21.994500000000002,25.4568 C 23.920499999999997,25.177799999999998 25.501499999999997,24.414300000000004 25.501499999999997,23.0763 C 25.501499999999997,23.0718 25.501499999999997,23.068800000000003 25.501499999999997,23.064300000000003 C 25.501499999999997,23.059800000000003 25.501499999999997,23.055300000000003 25.501499999999997,23.050800000000002 L 25.501499999999997,17.1813 L 25.501499999999997,14.511300000000002 C 25.501499999999997,13.9983 25.087500000000002,13.5843 24.576,13.5843\" fill=\"#231F20\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\"/></g><g transform=\"matrix(1, 0, 0, 1, 0, 0)\" clip-path=\"url(#CLIP47373)\"><g transform=\"matrix(1, 0, 0, 1, 50, 21.328662109375)\"><text x=\"0\" y=\"12.257006835937501\" style=\"font: 14px Segoe UI\" text-anchor=\"start\" fill=\"black\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">DeltaCopyfromDB</text></g></g></g></g><path d=\"M 2,0 L 191,0 C 191.89543050033842,0 193,1.1045694996615871 193,2 L 193,81 C 193,81.8954305003384 191.89543050033842,83 191,83 L 2,83 C 1.1045694996615871,83 0,81.8954305003384 0,81 L 0,2 C 0,1.1045694996615871 1.1045694996615871,0 2,0 z\" fill=\"transparent\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"/><path d=\"M 2,0 L 191,0 C 191.89543050033842,0 193,1.1045694996615871 193,2 L 193,81 C 193,81.8954305003384 191.89543050033842,83 191,83 L 2,83 C 1.1045694996615871,83 0,81.8954305003384 0,81 L 0,2 C 0,1.1045694996615871 1.1045694996615871,0 2,0 z\" fill=\"none\" stroke=\"#C8C8C8\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"/></g></g></g><g transform=\"matrix(1, 0, 0, 1, 194, 1)\"><g transform=\"matrix(1, 0, 0, 1, 0, 34)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><path d=\"M 0,0 L 9,0 L 9,12 L 0,12 z\" fill=\"#488E50\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 1)\"/></g></g></g></g><g transform=\"matrix(1, 0, 0, 1, 496, 50)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><g transform=\"matrix(1, 0, 0, 1, 0.8, 0.8)\"><rect x=\"0\" y=\"0\" width=\"192.4\" height=\"82.4\" fill=\"#F4F4F4\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\"/><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><rect x=\"0\" y=\"0\" width=\"192.4\" height=\"25\" fill=\"#DCDCDC\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\"/><g transform=\"matrix(1, 0, 0, 1, 0, 0)\" clip-path=\"url(#CLIP47374)\"><text x=\"0\" y=\"10.506005859375001\" style=\"font: 12px Segoe UI\" text-anchor=\"start\" fill=\"#515151\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 5, 6.5)\">Stored Procedure</text></g></g><g transform=\"matrix(1, 0, 0, 1, 0, 25)\"><g transform=\"matrix(1, 0, 0, 1, 10, 13.5)\"><path d=\"M 3,3 L 3,27 L 27,27 L 27,3 L 3,3 z M 25.5,25.5 L 4.5,25.5 L 4.5,10.5 L 25.5,10.5 L 25.5,25.5 z M 25.5,9 L 4.5,9 L 4.5,4.5 L 25.5,4.5 L 25.5,9 z M 7.5,16.5 L 16.5,16.5 L 16.5,18 L 7.5,18 L 7.5,16.5 M 18,16.5 L 22.5,16.5 L 22.5,18 L 18,18 L 18,16.5 M 13.5,19.5 L 22.5,19.5 L 22.5,21 L 13.5,21 L 13.5,19.5 M 7.5,19.5 L 12,19.5 L 12,21 L 7.5,21 L 7.5,19.5 M 7.5,13.5 L 22.5,13.5 L 22.5,15 L 7.5,15 L 7.5,13.5\" fill=\"#212121\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\"/></g><g transform=\"matrix(1, 0, 0, 1, 0, 0)\" clip-path=\"url(#CLIP47375)\"><g transform=\"matrix(1, 0, 0, 1, 50, 21.328662109375)\"><text x=\"0\" y=\"12.257006835937501\" style=\"font: 14px Segoe UI\" text-anchor=\"start\" fill=\"black\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">UpdateWaterMark</text></g></g></g></g><path d=\"M 2,0 L 191,0 C 191.89543050033842,0 193,1.1045694996615871 193,2 L 193,81 C 193,81.8954305003384 191.89543050033842,83 191,83 L 2,83 C 1.1045694996615871,83 0,81.8954305003384 0,81 L 0,2 C 0,1.1045694996615871 1.1045694996615871,0 2,0 z\" fill=\"transparent\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"/><path d=\"M 2,0 L 191,0 C 191.89543050033842,0 193,1.1045694996615871 193,2 L 193,81 C 193,81.8954305003384 191.89543050033842,83 191,83 L 2,83 C 1.1045694996615871,83 0,81.8954305003384 0,81 L 0,2 C 0,1.1045694996615871 1.1045694996615871,0 2,0 z\" fill=\"none\" stroke=\"#C8C8C8\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"/></g></g></g><g transform=\"matrix(1, 0, 0, 1, 194, 1)\"><g transform=\"matrix(1, 0, 0, 1, 0, 34)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><path d=\"M 0,0 L 9,0 L 9,12 L 0,12 z\" fill=\"#488E50\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 1)\"/></g></g></g></g><g transform=\"matrix(1, 0, 0, 1, 202.5, 86.88)\"><path d=\"M 0,75 L 16.5,75 Q 22.5,75 22.5,69 L 22.5,6 Q 22.5,0 28.5,0 L 45,0\" fill=\"none\" stroke=\"#488E50\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 5.12)\"/><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#488E50\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 37, 0.5)\"/><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#488E50\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 37, 0.5)\"/></g><g transform=\"matrix(1, 0, 0, 1, 202.5, 41.5)\"><path d=\"M 0,0 L 16.5,0 Q 22.5,0 22.5,6 L 22.5,44 Q 22.5,50 28.5,50 L 45,50\" fill=\"none\" stroke=\"#488E50\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"/><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#488E50\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 37, 45.88)\"/><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#488E50\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 37, 45.88)\"/></g><g transform=\"matrix(1, 0, 0, 1, 450.5, 86.88)\"><path d=\"M 0,0 L 45,0\" fill=\"none\" stroke=\"#488E50\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 5.12)\"/><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#488E50\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 37, 0.5)\"/><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#488E50\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 37, 0.5)\"/></g></g></g><clipPath id=\"mainClip47367\"><rect x=\"0\" y=\"0\" width=\"400\" height=\"240\"/></clipPath><clipPath id=\"CLIP47368\"><path d=\"M 5,6.5 L 192.4,6.5 L 192.4,25 L 5,25 z\" transform=\"matrix(1, 0, 0, 1, 0, 0)\"/></clipPath><clipPath id=\"CLIP47369\"><path d=\"M 50,21.328662109375 L 192.4,21.328662109375 L 192.4,37.671337890625 L 50,37.671337890625 z\" transform=\"matrix(1, 0, 0, 1, 0, 0)\"/></clipPath><clipPath id=\"CLIP47370\"><path d=\"M 5,6.5 L 192.4,6.5 L 192.4,25 L 5,25 z\" transform=\"matrix(1, 0, 0, 1, 0, 0)\"/></clipPath><clipPath id=\"CLIP47371\"><path d=\"M 50,21.328662109375 L 192.4,21.328662109375 L 192.4,37.671337890625 L 50,37.671337890625 z\" transform=\"matrix(1, 0, 0, 1, 0, 0)\"/></clipPath><clipPath id=\"CLIP47372\"><path d=\"M 5,6.5 L 192.4,6.5 L 192.4,25 L 5,25 z\" transform=\"matrix(1, 0, 0, 1, 0, 0)\"/></clipPath><clipPath id=\"CLIP47373\"><path d=\"M 50,21.328662109375 L 192.4,21.328662109375 L 192.4,37.671337890625 L 50,37.671337890625 z\" transform=\"matrix(1, 0, 0, 1, 0, 0)\"/></clipPath><clipPath id=\"CLIP47374\"><path d=\"M 5,6.5 L 192.4,6.5 L 192.4,25 L 5,25 z\" transform=\"matrix(1, 0, 0, 1, 0, 0)\"/></clipPath><clipPath id=\"CLIP47375\"><path d=\"M 50,21.328662109375 L 192.4,21.328662109375 L 192.4,37.671337890625 L 50,37.671337890625 z\" transform=\"matrix(1, 0, 0, 1, 0, 0)\"/></clipPath></svg>",
    "icons":[  
        "Lookup",
        "Lookup",
        "Copy"
    ],
    "requires":{  
        "linkedservices":{  
            "ExternalControlTableConnection":{  
                "supportTypes":[  
                    "SqlServer",
                    "AzureSqlDatabase"
                ],
                "parameterSets":[  
                    {  
                        "types":[  
                            "SqlServer"
                        ],
                        "parameters":{  
                            "LastSource_parameter":"SqlSource",
                            "LastSourceDataset_parameter":"SqlServerTable"
                        }
                    },
                    {  
                        "types":[  
                            "AzureSqlDatabase"
                        ],
                        "parameters":{  
                            "LastSource_parameter":"AzureSqlSource",
                            "LastSourceDataset_parameter":"AzureSqlTable"
                        }
                    }
                ]
            },
            "DataSourceConnection":{  
                "supportTypes":[  
                    "SqlServer",
                    "AzureSqlDatabase",
                    "Odbc",
                    "Oracle",
                    "Db2",
                    "MySql",
                    "Teradata",
                    "Netezza"
                ],
                "parameterSets":[  
                    {  
                        "types":[  
                            "SqlServer"
                        ],
                        "parameters":{  
                            "CurrentSource_parameter":"SqlSource",
                            "LookupCurrentActivity_Source_parameter":{  
                                "type":"SqlSource",
                                "sqlReaderQuery":{  
                                    "value":"@concat('select MAX(',pipeline().parameters.Data_Source_WaterMarkColumn, ') as NewWatermarkValue from ',pipeline().parameters.Data_Source_Table_Name)",
                                    "type":"Expression"
                                }
                            },
                            "sqlReaderQuery_parameter":{  
                                "value":"select * from @{pipeline().parameters.Data_Source_Table_Name} where @{pipeline().parameters.Data_Source_WaterMarkColumn} > '@{activity('LookupLastWaterMark').output.firstRow.WatermarkValue}' and @{pipeline().parameters.Data_Source_WaterMarkColumn} <= '@{activity('LookupCurrentWaterMark').output.firstRow.NewWatermarkValue}'",
                                "type":"Expression"
                            },
                            "SourceDataset_parameter":"SqlServerTable",
                            "SourceDataset_property_parameter":{  
                                "schema":"dbo",
                                "table":"DataSourceTable"
                            }
                        }
                    },
                    {  
                        "types":[  
                            "AzureSqlDatabase"
                        ],
                        "parameters":{  
                            "CurrentSource_parameter":"AzureSqlSource",
                            "LookupCurrentActivity_Source_parameter":{  
                                "type":"AzureSqlSource",
                                "sqlReaderQuery":{  
                                    "value":"@concat('select MAX(',pipeline().parameters.Data_Source_WaterMarkColumn, ') as NewWatermarkValue from ',pipeline().parameters.Data_Source_Table_Name)",
                                    "type":"Expression"
                                }
                            },
                            "sqlReaderQuery_parameter":{  
                                "value":"select * from @{pipeline().parameters.Data_Source_Table_Name} where @{pipeline().parameters.Data_Source_WaterMarkColumn} > '@{activity('LookupLastWaterMark').output.firstRow.WatermarkValue}' and @{pipeline().parameters.Data_Source_WaterMarkColumn} <= '@{activity('LookupCurrentWaterMark').output.firstRow.NewWatermarkValue}'",
                                "type":"Expression"
                            },
                            "SourceDataset_parameter":"AzureSqlTable",
                            "SourceDataset_property_parameter":{  
                                "schema":"dbo",
                                "table":"DataSourceTable"
                            }
                        }
                    },
                    {  
                        "types":[  
                            "Odbc"
                        ],
                        "parameters":{  
                            "CurrentSource_parameter":"OdbcSource",
                            "LookupCurrentActivity_Source_parameter":{  
                                "type":"OdbcSource",
                                "query":{  
                                    "value":"@concat('select MAX(',pipeline().parameters.Data_Source_WaterMarkColumn, ') as NewWatermarkValue from ',pipeline().parameters.Data_Source_Table_Name)",
                                    "type":"Expression"
                                }
                            },
                            "OdbcReaderQuery_parameter":{  
                                "value":"select * from @{pipeline().parameters.Data_Source_Table_Name} where @{pipeline().parameters.Data_Source_WaterMarkColumn} > '@{activity('LookupLastWaterMark').output.firstRow.WatermarkValue}' and @{pipeline().parameters.Data_Source_WaterMarkColumn} <= '@{activity('LookupCurrentWaterMark').output.firstRow.NewWatermarkValue}'",
                                "type":"Expression"
                            },
                            "SourceDataset_parameter":"OdbcTable",
                            "SourceDataset_property_parameter":{  
                                "tableName":"DataSourceTable"
                            }
                        }
                    },
                    {  
                        "types":[  
                            "MySql"
                        ],
                        "parameters":{  
                            "CurrentSource_parameter":"MySqlSource",
                            "LookupCurrentActivity_Source_parameter":{  
                                "type":"MySqlSource",
                                "query":{  
                                    "value":"@concat('select MAX(',pipeline().parameters.Data_Source_WaterMarkColumn, ') as NewWatermarkValue from ',pipeline().parameters.Data_Source_Table_Name)",
                                    "type":"Expression"
                                }
                            },
                            "OdbcReaderQuery_parameter":{  
                                "value":"select * from @{pipeline().parameters.Data_Source_Table_Name} where @{pipeline().parameters.Data_Source_WaterMarkColumn} > '@{activity('LookupLastWaterMark').output.firstRow.WatermarkValue}' and @{pipeline().parameters.Data_Source_WaterMarkColumn} <= '@{activity('LookupCurrentWaterMark').output.firstRow.NewWatermarkValue}'",
                                "type":"Expression"
                            },
                            "SourceDataset_parameter":"MySqlTable",
                            "SourceDataset_property_parameter":{  
                                "tableName":"DataSourceTable"
                            }
                        }
                    },
                    {  
                        "types":[  
                            "Teradata"
                        ],
                        "parameters":{  
                            "CurrentSource_parameter":"TeradataSource",
                            "LookupCurrentActivity_Source_parameter":{  
                                "type":"TeradataSource",
                                "query":{  
                                    "value":"@concat('select MAX(',pipeline().parameters.Data_Source_WaterMarkColumn, ') as NewWatermarkValue from ',pipeline().parameters.Data_Source_Table_Name)",
                                    "type":"Expression"
                                }
                            },
                            "OdbcReaderQuery_parameter":{  
                                "value":"select * from @{pipeline().parameters.Data_Source_Table_Name} where @{pipeline().parameters.Data_Source_WaterMarkColumn} > '@{activity('LookupLastWaterMark').output.firstRow.WatermarkValue}' and @{pipeline().parameters.Data_Source_WaterMarkColumn} <= '@{activity('LookupCurrentWaterMark').output.firstRow.NewWatermarkValue}'",
                                "type":"Expression"
                            },
                            "SourceDataset_parameter":"TeradataTable",
                            "SourceDataset_property_parameter":{  
                                "table":"DataSourceTable"
                            }
                        }
                    },
                    {  
                        "types":[  
                            "Netezza"
                        ],
                        "parameters":{  
                            "CurrentSource_parameter":"NetezzaSource",
                            "LookupCurrentActivity_Source_parameter":{  
                                "type":"NetezzaSource",
                                "query":{  
                                    "value":"@concat('select MAX(',pipeline().parameters.Data_Source_WaterMarkColumn, ') as NewWatermarkValue from ',pipeline().parameters.Data_Source_Table_Name)",
                                    "type":"Expression"
                                }
                            },
                            "OdbcReaderQuery_parameter":{  
                                "value":"select * from @{pipeline().parameters.Data_Source_Table_Name} where @{pipeline().parameters.Data_Source_WaterMarkColumn} > '@{activity('LookupLastWaterMark').output.firstRow.WatermarkValue}' and @{pipeline().parameters.Data_Source_WaterMarkColumn} <= '@{activity('LookupCurrentWaterMark').output.firstRow.NewWatermarkValue}'",
                                "type":"Expression"
                            },
                            "SourceDataset_parameter":"NetezzaTable",
                            "SourceDataset_property_parameter":{  
                                "schema":"dbo",
                                "table":"DataSourceTable"
                            }
                        }
                    },
                    {  
                        "types":[  
                            "Db2"
                        ],
                        "parameters":{  
                            "CurrentSource_parameter":"Db2Source",
                            "LookupCurrentActivity_Source_parameter":{  
                                "type":"Db2Source",
                                "query":{  
                                    "value":"@concat('select MAX(',pipeline().parameters.Data_Source_WaterMarkColumn, ') as NewWatermarkValue from ',pipeline().parameters.Data_Source_Table_Name)",
                                    "type":"Expression"
                                }
                            },
                            "OdbcReaderQuery_parameter":{  
                                "value":"select * from @{pipeline().parameters.Data_Source_Table_Name} where @{pipeline().parameters.Data_Source_WaterMarkColumn} > '@{activity('LookupLastWaterMark').output.firstRow.WatermarkValue}' and @{pipeline().parameters.Data_Source_WaterMarkColumn} <= '@{activity('LookupCurrentWaterMark').output.firstRow.NewWatermarkValue}'",
                                "type":"Expression"
                            },
                            "SourceDataset_parameter":"Db2Table",
                            "SourceDataset_property_parameter":{  
                                "schema":"dbo",
                                "table":"DataSourceTable"
                            }
                        }
                    },
                    {  
                        "types":[  
                            "Oracle"
                        ],
                        "parameters":{  
                            "CurrentSource_parameter":"OracleSource",
                            "LookupCurrentActivity_Source_parameter":{  
                                "type":"OracleSource",
                                "oracleReaderQuery":{  
                                    "value":"@concat('select MAX(',pipeline().parameters.Data_Source_WaterMarkColumn, ') as NewWatermarkValue from ',pipeline().parameters.Data_Source_Table_Name)",
                                    "type":"Expression"
                                }
                            },
                            "OracleReaderQuery_parameter":{  
                                "value":"select * from @{pipeline().parameters.Data_Source_Table_Name} where @{pipeline().parameters.Data_Source_WaterMarkColumn} > '@{activity('LookupLastWaterMark').output.firstRow.WatermarkValue}' and @{pipeline().parameters.Data_Source_WaterMarkColumn} <= '@{activity('LookupCurrentWaterMark').output.firstRow.NewWatermarkValue}'",
                                "type":"Expression"
                            },
                            "SourceDataset_parameter":"OracleTable",
                            "SourceDataset_property_parameter":{  
                                "schema":"dbo",
                                "table":"DataSourceTable"
                            }
                        }
                    }
                ]
            },
            "DataDestinationConnection":{  
                "supportTypes":[  
                    "AzureBlobStorage",
                    "AzureDataLakeStore",
                    "AzureBlobFS",
                    "FileServer",
                    "AzureSqlDW"
                ],
                "parameterSets":[  
                    {  
                        "types":[  
                            "AzureBlobStorage"
                        ],
                        "parameters":{  
                            "enableStaging_parameter":false,
                            "copyactivity_output_parameter":{  
                                "Data_Destination_Container":{  
                                    "value":"@pipeline().parameters.Data_Destination_Container",
                                    "type":"Expression"
                                },
                                "Data_Destination_Directory":{  
                                    "value":"@pipeline().parameters.Data_Destination_Directory",
                                    "type":"Expression"
                                }
                            },
                            "DataDestination_parameter_parameter":{  
                                "Data_Destination_Container":{  
                                    "type":"String"
                                },
                                "Data_Destination_Directory":{  
                                    "type":"String"
                                }
                            },
                            "DataDestination_typeproperties_parameter":{  
                                "location":{  
                                    "type":"AzureBlobStorageLocation",
                                    "container":{  
                                        "value":"@{dataset().Data_Destination_Container}",
                                        "type":"Expression"
                                    },
                                    "folderPath":{  
                                        "value":"@{dataset().Data_Destination_Directory}",
                                        "type":"Expression"
                                    }
                                },
                                "columnDelimiter":",",
                                "quoteChar":"\"",
                                "firstRowAsHeader":true
                            },
                            "DataDestination_type_parameter":"DelimitedText",
                            "pipeline_parameter":{  
                                "Data_Source_Table_Name":{  
                                    "type":"String"
                                },
                                "Data_Source_WaterMarkColumn":{  
                                    "type":"String"
                                },
                                "Data_Destination_Container":{  
                                    "type":"String"
                                },
                                "Data_Destination_Directory":{  
                                    "type":"String"
                                },
                                "Control_Table_Table_Name":{  
                                    "type":"String"
                                },
                                "Control_Table_Column_Name":{  
                                    "type":"String"
                                }
                            }
                        }
                    },
                    {  
                        "types":[  
                            "FileServer"
                        ],
                        "parameters":{  
                            "enableStaging_parameter":false,
                            "copyactivity_output_parameter":{  
                                "FolderPath":{  
                                    "value":"@pipeline().parameters.Data_Destination_Folder_Path",
                                    "type":"Expression"
                                }
                            },
                            "DataDestination_parameter_parameter":{  
                                "FolderPath":{  
                                    "type":"String"
                                }
                            },
                            "DataDestination_typeproperties_parameter":{  
                                "location":{  
                                    "type":"FileServerLocation",
                                    "folderPath":{  
                                        "value":"@dataset().FolderPath",
                                        "type":"Expression"
                                    }
                                },
                                "columnDelimiter":",",
                                "quoteChar":"\"",
                                "firstRowAsHeader":true
                            },
                            "DataDestination_type_parameter":"DelimitedText",
                            "pipeline_parameter":{  
                                "Data_Source_Table_Name":{  
                                    "type":"String"
                                },
                                "Data_Source_WaterMarkColumn":{  
                                    "type":"String"
                                },
                                "Data_Destination_Folder_Path":{  
                                    "type":"String"
                                },
                                "Control_Table_Table_Name":{  
                                    "type":"String"
                                },
                                "Control_Table_Column_Name":{  
                                    "type":"String"
                                }
                            }
                        }
                    },
                    {  
                        "types":[  
                            "AzureDataLakeStore"
                        ],
                        "parameters":{  
                            "enableStaging_parameter":false,
                            "copyactivity_output_parameter":{  
                                "FolderPath":{  
                                    "value":"@pipeline().parameters.Data_Destination_Folder_Path",
                                    "type":"Expression"
                                }
                            },
                            "DataDestination_parameter_parameter":{  
                                "FolderPath":{  
                                    "type":"String"
                                }
                            },
                            "DataDestination_typeproperties_parameter":{  
                                "location":{  
                                    "type":"AzureDataLakeStoreLocation",
                                    "folderPath":{  
                                        "value":"@dataset().FolderPath",
                                        "type":"Expression"
                                    }
                                },
                                "columnDelimiter":",",
                                "quoteChar":"\"",
                                "firstRowAsHeader":true
                            },
                            "DataDestination_type_parameter":"DelimitedText",
                            "pipeline_parameter":{  
                                "Data_Source_Table_Name":{  
                                    "type":"String"
                                },
                                "Data_Source_WaterMarkColumn":{  
                                    "type":"String"
                                },
                                "Data_Destination_Folder_Path":{  
                                    "type":"String"
                                },
                                "Control_Table_Table_Name":{  
                                    "type":"String"
                                },
                                "Control_Table_Column_Name":{  
                                    "type":"String"
                                }
                            }
                        }
                    },
                    {  
                        "types":[  
                            "AzureBlobFS"
                        ],
                        "parameters":{  
                            "enableStaging_parameter":false,
                            "copyactivity_output_parameter":{  
                                "Data_Destination_Container":{  
                                    "value":"@pipeline().parameters.Data_Destination_Container",
                                    "type":"Expression"
                                },
                                "Data_Destination_Directory":{  
                                    "value":"@pipeline().parameters.Data_Destination_Directory",
                                    "type":"Expression"
                                }
                            },
                            "DataDestination_parameter_parameter":{  
                                "Data_Destination_Container":{  
                                    "type":"String"
                                },
                                "Data_Destination_Directory":{  
                                    "type":"String"
                                }
                            },
                            "DataDestination_typeproperties_parameter":{  
                                "location":{  
                                    "type":"AzureBlobFSLocation",
                                    "fileSystem":{  
                                        "value":"@{dataset().Data_Destination_Container}",
                                        "type":"Expression"
                                    },
                                    "folderPath":{  
                                        "value":"@{dataset().Data_Destination_Directory}",
                                        "type":"Expression"
                                    }
                                },
                                "columnDelimiter":",",
                                "quoteChar":"\"",
                                "firstRowAsHeader":true
                            },
                            "DataDestination_type_parameter":"DelimitedText",
                            "pipeline_parameter":{  
                                "Data_Source_Table_Name":{  
                                    "type":"String"
                                },
                                "Data_Source_WaterMarkColumn":{  
                                    "type":"String"
                                },
                                "Data_Destination_Container":{  
                                    "type":"String"
                                },
                                "Data_Destination_Directory":{  
                                    "type":"String"
                                },
                                "Control_Table_Table_Name":{  
                                    "type":"String"
                                },
                                "Control_Table_Column_Name":{  
                                    "type":"String"
                                }
                            }
                        }
                    },
                    {  
                        "types":[  
                            "AzureSqlDW"
                        ],
                        "parameters":{  
                            "allowPolyBase_parameter":true,
                            "writeBatchSize_parameter":10000,
                            "polyBaseSettings_parameter":{  
                                "rejectValue":0,
                                "rejectType":"value",
                                "useTypeDefault":true
                            },
                            "enableStaging_parameter":true,
                            "stagingSettings_parameter":{  
                                "path":"adfsolutiontemplate/DeltaCopyfromDB_using_ControlTable"
                            },
                            "copyactivity_output_parameter":{  
                                "tableName":{  
                                    "value":"@pipeline().parameters.Data_Destination_Table_Name",
                                    "type":"Expression"
                                }
                            },
                            "DataDestination_parameter_parameter":{  
                                "tableName":{  
                                    "type":"String"
                                }
                            },
                            "DataDestination_typeproperties_parameter":{  
                                "schema":"dbo",
                                "table":{  
                                    "value":"@dataset().tableName",
                                    "type":"Expression"
                                }
                            },
                            "DataDestination_type_parameter":"AzureSqlDWTable",
                            "pipeline_parameter":{  
                                "Data_Source_Table_Name":{  
                                    "type":"String"
                                },
                                "Data_Source_WaterMarkColumn":{  
                                    "type":"String"
                                },
                                "Data_Destination_Table_Name":{  
                                    "type":"String"
                                },
                                "Control_Table_Table_Name":{  
                                    "type":"String"
                                },
                                "Control_Table_Column_Name":{  
                                    "type":"String"
                                }
                            }
                        }
                    }
                ]
            }
        }
    },
    "documentation":"https://go.microsoft.com/fwlink/?linkid=2059735",
    "annotations":[  
        "Incremental copy",
        "SQL Azure",
        "Control Table"
    ],
    "services":[  
        "SQL Azure"
    ],
    "categories":[  
        "Copy"
    ]
}